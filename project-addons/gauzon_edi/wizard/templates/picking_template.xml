# -*- coding: utf-8 -*-
<%
    def get_operation(obj):
        packages = {}
        for op in obj.move_line_ids:
            if op.result_package_id and not packages.get(op.result_package_id, False):
                packages[op.result_package_id] = [op]
            elif op.result_package_id and  packages.get(op.result_package_id, False):
                packages[op.result_package_id].append(op)
            elif not op.result_package_id and not packages.get('NO', False):
                packages['NO'] = [op]
            else:
                packages['NO'].append(op)
        return packages

    def get_grouped_links (x, ops):
        vals = []
        values = {}
        for y in ops:
            for l in y:
                num_ped =  l.move_id.sale_line_id and l.move_id.sale_line_id.order_id.client_order_ref or 'num_ped'
                ean13v = y.product_id.ean13v and y.product_id.ean13v or 'ean13v'
                refcli =  l.move_id.sale_line_id and l.move_id.sale_line_id.refcli or ''
                refprov =  l.move_id.sale_line_id and l.move_id.sale_line_id.refprov or ''
                numserie = y.lot_id and y.lot_id.name or ''
                descmer = l.move_id.sale_line_id and l.move_id.sale_line_id.name or ''
                edi_code = y.product_uom_id and y.product_uom_id.edi_code or ''
                oqty = l.move_id.sale_line_id and l.move_id.sale_line_id.product_uom_qty or 0.0
                qty =  l.qty_done or 0.0
                nuevo = True
                if vals:
                    for val in vals:
                        if val['num_ped'] == num_ped and val['ean13v'] == ean13v and val['numserie'] == numserie:
                            val['qty'] += qty
                            nuevo = False

                if nuevo:
                    values = {'num_ped': num_ped,
                                'ean13v': ean13v,
                                'refcli': refcli,
                                'refprov': refprov,
                                'numserie': numserie,
                                'descmer': descmer,
                                'edi_code': edi_code,
                                'qty': qty,
                                'oqty': oqty
                                }
                    vals.append (values)
        return vals

%><?xml version="1.0" encoding="UTF-8"?>
<doc c="DESADV" gi_cab_nodo="351" gi_cab_funcion="9">
  <gi_cab>
    <gi_cab_numcontr>${ o.num_contract or '' }</gi_cab_numcontr>
    <gi_cab_numalb>${ o.name or '' }</gi_cab_numalb>
    <gi_cab_fecha>${ o.date.split(' ')[0] or '' }</gi_cab_fecha>
    <gi_cab_estimada_entrega>${ o.scheduled_date.split(' ')[0] or ''  }</gi_cab_estimada_entrega>
    <gi_cab_emisor>${ o.company_id.partner_id.gln or '' }</gi_cab_emisor>
    <gi_cab_vendedor>${ o.company_id.partner_id.gln or '' }</gi_cab_vendedor>
    <gi_cab_comprador>${ o.partner_id.gln or '' }</gi_cab_comprador>
    <gi_cab_shipto>${ o.partner_id.gln or '' }</gi_cab_shipto>
  </gi_cab>
  <gi_empaqs><% count = 1 %><% dic = get_operation(o) %>
    %for x in dic:
    <gi_empaq n="${ count }" gi_empaq_tipo="${ x!='NO' and x.packaging_type_id.alias or ''}" gi_empaq_sscc="${ x!='NO' and x.name or ''}">
      <gi_lines><% count2 = 1 %>
        %for val in get_grouped_links (x, dic[x]):
        <gi_lin n="${ count2 }">
          <gi_lin_numped>${ val['num_ped'] }</gi_lin_numped>
          <gi_lin_ean13v>${ val['ean13v'] }</gi_lin_ean13v>
          <gi_lin_refcli>${ val['refcli'] }</gi_lin_refcli>
          <gi_lin_refprov>${ val['refprov'] }</gi_lin_refprov>
          <gi_lin_numserie>${ val['numserie'] }</gi_lin_numserie>
          <gi_lin_descmer>${ val['descmer'] }</gi_lin_descmer>
          <gi_lin_cantent gi_lin_umedida="${ val['edi_code'] }">${ val['qty'] }</gi_lin_cantent>
          <gi_lin_cantentfac gi_lin_umedfac="${ val['edi_code'] }">${ val['qty'] }</gi_lin_cantentfac>
          <gi_lin_cantped gi_lin_umedida="${ val['edi_code'] }">${ val['oqty'] }</gi_lin_cantped>
        </gi_lin><% count2 += 1 %>
        %endfor
      </gi_lines>
    </gi_empaq><% count += 1 %>
    %endfor
  </gi_empaqs>

</doc>
